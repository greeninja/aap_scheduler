---
- name: Create Schedules
  hosts: 127.0.0.1
  connection: local
  tasks:
    - name: Set update date query
      shell: date -d "+ 10 days" "+%Y-%m-%d %H:%M:00"
      register: update_date_shell

    - name: Set update_date fact
      set_fact:
        update_date: "{{ update_date_shell.stdout }}"

    - name: Get hosts from MySQL
      community.mysql.mysql_query:
        login_host: "{{ db_host }}"
        login_db: patching
        login_user: root
        login_password: "{{ mysql_passwd }}"
        login_port: "{{ db_port }}"
        query: 'select * from patch where update_time <= "{{ update_date }}" and pre_checks_created <= 0 or update_time <= "{{ update_date }}" and patch_created <= 0 order by update_time asc limit 500;'
      register: mysql_results

    # - name: Get pre check schedules
    #   ansible.builtin.uri:
    #     url: "{{ controller_uri }}/api/v2/job_templates/{{ pre_check_template_id }}/schedules?page_size=1000"
    #     body_format: json
    #     validate_certs: false
    #     return_content: true
    #     method: GET
    #     headers:
    #       Content-Type: application/json
    #       Authorization: "Bearer {{ controller_token }}"
    #   register: pre_check_schedules_data

    # - name: Set pre_check_schedules fact
    #   set_fact:
    #     pre_check_schedules: "{{ pre_check_schedules_data.json.results }}"

    # - name: Get patch schedules
    #   ansible.builtin.uri:
    #     url: "{{ controller_uri }}/api/v2/job_templates/{{ patch_template_id }}/schedules/"
    #     body_format: json
    #     validate_certs: false
    #     return_content: true
    #     method: GET
    #     headers:
    #       Content-Type: application/json
    #       Authorization: "Bearer {{ controller_token }}"
    #   register: patch_schedules_data

    # - name: Set patch_schedules fact
    #   set_fact:
    #     patch_schedules: "{{ patch_schedules_data.json.results }}"

    - name: Build schedules
      include_tasks: build_schedules.yaml
      loop: "{{ mysql_results.query_result[0] }}"
